{"version":3,"sources":["components/topbar/navbar.js","components/postform.js","components/loginform.js","App.js","index.js"],"names":["Navbar","useState","data","setMydata","query","setMyquery","useEffect","fetch","then","response","json","catch","err","console","log","filtering","phone","searching","filter","phonumber","indexOf","className","bg","variant","Brand","href","Link","to","type","placeholder","onChange","event","target","value","onClick","message","map","people","names","length","document","getElementById","innerText","id","post","Login","App","path","exact","component","Post","ReactDOM","render","StrictMode"],"mappings":"gNA0DeA,EAxDA,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACNC,EADM,OAEUF,mBAAS,CAAC,KAFpB,mBAEZG,EAFY,KAEJC,EAFI,KAGnBC,qBAAU,WACRC,MAAM,yDAAyDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACtFF,MAAK,SAAAE,GAAI,OAAIP,EAAUO,EAAKR,SAAOS,OAAM,SAAAC,GACxCC,QAAQC,IAAIF,QAEf,IACHC,QAAQC,IAAIZ,GACZ,IAAMa,EAAY,SAACC,GACjB,IAAIC,EAAY,yBAOhB,OANID,EAAME,QAAO,SAAAC,GAAS,OAAIA,EAAUH,MAAMI,QAAQhB,IAAU,KAE9Da,EAAYD,EAAME,QAAO,SAAAC,GAAS,OAAIA,EAAUH,MAAMI,QAAQhB,IAAU,KAC/DY,EAAME,QAAO,SAAAC,GAAS,OAAsC,IAAlCA,EAAUH,MAAMI,QAAQhB,QACzDa,GAAsBb,GAEnBa,GAYT,OACI,qCACG,qBAAKI,UAAU,MAAf,SACC,qBAAKA,UAAU,SAAf,SACG,eAAC,IAAD,CAAuBC,GAAG,OAAOC,QAAQ,OAAzC,UACT,cAAC,IAAsBC,MAAvB,CAA6BC,KAAK,QAAlC,qBACA,eAAC,IAAD,CAAoBJ,UAAU,UAA9B,UACE,cAAC,IAAmBK,KAApB,CAAyBD,KAAK,QAA9B,kBACA,cAAC,IAAmBC,KAApB,CAA0BC,GAAI,4BAA9B,mBACA,cAAC,IAAmBD,KAApB,CAAyBD,KAAK,IAA9B,0BAEF,cAAC,IAAD,CAA4BG,KAAK,OAAOC,YAAY,SAASR,UAAU,UAAUS,SAAU,SAAAC,GAAK,OAAG1B,EAAW0B,EAAMC,OAAOC,UAC1H,cAAC,IAAD,CAAuBA,MAAO7B,EAAO8B,QAtBzB,WACb,IAAIC,EAAU,uCACdtB,QAAQC,IAAIC,EAAUb,GAAMkC,KAAI,SAAAC,GAAM,OAAIA,EAAOC,UACjDzB,QAAQC,IAAIV,GACS,KAAjBA,EAAMmC,QAA2B,KAAVnC,GAA0B,OAAVA,IACzC+B,EAAWpB,EAAUb,GAAMkC,KAAI,SAAAC,GAAM,OAAEA,EAAOC,UAEhDE,SAASC,eAAe,SAASC,UAAWP,GAeYZ,QAAQ,eAA/D,2BAKG,qBAAKF,UAAU,2BAAf,SACE,iCACA,oBAAIsB,GAAG,QAAP,uB,eCvCKC,EAVF,WACT,OACI,8BACI,iCACK,0DCMFC,EAVD,WACV,OACI,8BACI,iCACM,0DCeHC,MAff,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAG0B,KAAK,IAAIC,OAAK,IACjB,cAAC,IAAD,CAAGA,OAAK,EAACD,KAAK,2BAA4BE,UAAWC,IACvD,cAAC,IAAD,CAAGF,OAAK,EAACD,KAAK,4BAA6BE,UAAWJ,aCR9DM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,W","file":"static/js/main.e032c23a.chunk.js","sourcesContent":["import React, { useState, useEffect}from 'react'\nimport * as  Reactbootstrap  from'react-bootstrap';\nconst Navbar = () => {\n  const [data, setMydata] = useState([]);\n  const [query,  setMyquery] = useState([''])\n  useEffect(() => {\n    fetch('https://contactaddress.herokuapp.com/api/all_contacts').then(response => response.json())\n      .then(json => setMydata(json.data)).catch(err => {\n        console.log(err)\n      }) \n  }, []);\n  console.log(data)\n  const filtering = (phone) => {\n    let searching = ' Thisis not registerd '\n    if (phone.filter(phonumber => phonumber.phone.indexOf(query) > -1))\n    {\n      searching = phone.filter(phonumber => phonumber.phone.indexOf(query) > -1);\n    } else if( phone.filter(phonumber => phonumber.phone.indexOf(query) ===0)){\n        searching = searching+query\n      }\n    return searching;\n  }\n  const search = () => {\n    let message = 'No data found of the provided number'\n    console.log(filtering(data).map(people => people.names))\n    console.log(query)\n    if (query.length === 10 && query !== '' && query !== null) {\n      message =  filtering(data).map(people=>people.names)\n    }\n    document.getElementById('ouput').innerText =message\n  }\n\n  return (\n      <>\n         <div className='row'>\n          <div className='col-12'>\n             <Reactbootstrap.Navbar bg=\"dark\" variant=\"dark\">\n    <Reactbootstrap.Navbar.Brand href=\"#home\">Holsoft</Reactbootstrap.Navbar.Brand>\n    <Reactbootstrap.Nav className=\"mr-auto\">\n      <Reactbootstrap.Nav.Link href=\"#home\">Home</Reactbootstrap.Nav.Link>\n      <Reactbootstrap.Nav.Link  to= '/src/components/loginform'>Login</Reactbootstrap.Nav.Link>\n      <Reactbootstrap.Nav.Link href=\"#\">Recording</Reactbootstrap.Nav.Link>\n    </Reactbootstrap.Nav>\n    <Reactbootstrap.FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={event=> setMyquery(event.target.value )}/>\n     <Reactbootstrap.Button value={query} onClick={ search} variant=\"outline-info\">Search</Reactbootstrap.Button>\n    \n  </Reactbootstrap.Navbar>\n           </div>\n        </div>\n        <div className=' justify-content-between'>\n          <center>\n          <h1 id='ouput'> </h1>\n          </center>\n        </div>\n      </>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst post = () => {\n    return (\n        <div >\n            <center>\n                 <h1>Hey I am Post page </h1>\n           </center>\n        </div>\n    )\n}\n\nexport default post","import React from 'react'\n\nconst Login = () => {\n    return (\n        <div >\n            <center>\n                  <h1>Hey I am login page</h1>\n          </center>\n        </div>\n    )\n}\n\nexport default Login\n","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/topbar/navbar'\nimport { BrowserRouter as Br, Route as R, Switch as S } from 'react-router-dom'\nimport Post from './components/postform'\nimport Login from './components/loginform';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Br>\n        <S>\n          <R path='/' exact />\n          <R exact path='/src/components/postform'  component={Post}/>\n        <R exact path='/src/components/loginform'  component={Login}/>\n        </S>\n      </Br>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}